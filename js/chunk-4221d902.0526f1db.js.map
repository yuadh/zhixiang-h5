{"version":3,"sources":["webpack:///./src/views/chart/index.vue","webpack:///./node_modules/engine.io-client/build/esm/contrib/has-cors.js","webpack:///./node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js","webpack:///./node_modules/engine.io-client/build/esm/transports/polling.js","webpack:///./node_modules/engine.io-client/build/esm/transports/index.js","webpack:///./node_modules/engine.io-client/build/esm/contrib/parseuri.js","webpack:///./node_modules/engine.io-client/build/esm/socket.js","webpack:///./node_modules/engine.io-client/build/esm/index.js","webpack:///./node_modules/socket.io-client/build/esm/url.js","webpack:///./node_modules/socket.io-parser/build/esm/is-binary.js","webpack:///./node_modules/socket.io-parser/build/esm/binary.js","webpack:///./node_modules/socket.io-parser/build/esm/index.js","webpack:///./node_modules/socket.io-client/build/esm/on.js","webpack:///./node_modules/socket.io-client/build/esm/socket.js","webpack:///./node_modules/socket.io-client/build/esm/contrib/backo2.js","webpack:///./node_modules/socket.io-client/build/esm/manager.js","webpack:///./node_modules/socket.io-client/build/esm/index.js","webpack:///src/views/chart/index.vue","webpack:///./src/views/chart/index.vue?c529","webpack:///./src/views/chart/index.vue?a48b","webpack:///./node_modules/engine.io-client/build/esm/transports/websocket.js","webpack:///./node_modules/engine.io-client/build/esm/globalThis.browser.js","webpack:///./node_modules/engine.io-client/build/esm/contrib/yeast.js","webpack:///./node_modules/engine.io-parser/build/esm/commons.js","webpack:///./node_modules/engine.io-parser/build/esm/encodePacket.browser.js","webpack:///./node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","webpack:///./node_modules/engine.io-parser/build/esm/decodePacket.browser.js","webpack:///./node_modules/engine.io-parser/build/esm/index.js","webpack:///./node_modules/engine.io-client/build/esm/transport.js","webpack:///./node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js","webpack:///./src/views/chart/index.vue?9a32","webpack:///./node_modules/engine.io-client/build/esm/contrib/parseqs.js","webpack:///./node_modules/engine.io-client/build/esm/util.js","webpack:///./node_modules/@socket.io/component-emitter/index.mjs","webpack:///./src/api/user.js"],"names":["render","_vm","this","_c","_self","staticClass","attrs","on","$event","$router","back","ref","_l","list","item","i","key","class","left","name","right","_e","_v","_s","msg","myAvatar","model","value","callback","$$v","trim","expression","send","staticRenderFns","XMLHttpRequest","err","hasCORS","XHR","opts","xdomain","e","concat","join","empty","hasXHR2","xhr","responseType","super","polling","location","isSSL","protocol","port","xd","hostname","xs","secure","forceBase64","supportsBinary","poll","onPause","readyState","pause","writable","total","once","doPoll","emitReserved","data","packet","type","onOpen","onClose","description","onPacket","socket","binaryType","forEach","close","write","packets","doWrite","query","schema","timestampRequests","timestampParam","yeast","sid","b64","Number","encodedQuery","ipv6","indexOf","path","length","Object","assign","uri","fn","req","request","method","xhrStatus","context","onError","onData","bind","pollXhr","async","undefined","create","xscheme","open","extraHeaders","setDisableHeaderCheck","hasOwnProperty","setRequestHeader","withCredentials","requestTimeout","timeout","onreadystatechange","status","onLoad","setTimeoutFn","document","index","requestsCount","requests","cleanup","fromError","abort","responseText","attachEvent","unloadHandler","addEventListener","terminationEvent","transports","websocket","re","parts","parse","str","src","b","substring","replace","m","exec","source","host","authority","ipv6uri","pathNames","queryKey","obj","regx","names","split","slice","splice","$0","$1","$2","writeBuffer","prevBufferLen","agent","upgrade","rememberUpgrade","addTrailingSlash","rejectUnauthorized","perMessageDeflate","threshold","transportOptions","closeOnBeforeunload","id","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","beforeunloadEventListener","transport","removeAllListeners","offlineEventListener","EIO","priorWebsocketSuccess","createTransport","shift","setTransport","onDrain","reason","failed","onTransportOpen","upgrading","flush","Error","freezeTransport","onerror","error","onTransportClose","onclose","onupgrade","to","removeListener","off","l","probe","onHandshake","JSON","resetPingTimeout","sendPacket","code","filterUpgrades","maxPayload","clearTimeoutFn","autoUnref","unref","getWritablePackets","shouldCheckPayloadSize","payloadSize","options","compress","push","cleanupAndClose","waitForUpgrade","removeEventListener","filteredUpgrades","j","url","loc","charAt","test","href","withNativeArrayBuffer","ArrayBuffer","isView","buffer","prototype","toString","withNativeBlob","Blob","call","withNativeFile","File","isBinary","hasBinary","toJSON","Array","isArray","arguments","deconstructPacket","buffers","packetData","pack","_deconstructPacket","attachments","placeholder","_placeholder","num","newData","Date","reconstructPacket","_reconstructPacket","isIndexValid","PacketType","replacer","EVENT","ACK","encodeAsString","encodeAsBinary","BINARY_EVENT","BINARY_ACK","nsp","stringify","deconstruction","unshift","reviver","reconstructor","decodeString","isBinaryEvent","base64","takeBinaryData","p","start","buf","c","next","payload","tryParse","substr","isPayloadValid","CONNECT","DISCONNECT","CONNECT_ERROR","finishedReconstruction","reconPack","binData","ev","RESERVED_EVENTS","freeze","connect","connect_error","disconnect","disconnecting","newListener","io","connected","recovered","receiveBuffer","sendBuffer","_queue","ids","acks","flags","auth","_opts","_autoConnect","subs","onopen","onpacket","subEvents","_readyState","args","emit","apply","retries","fromQueue","volatile","_addToQueue","ack","pop","_registerAckCallback","isTransportWritable","engine","discardPacket","notifyOutgoingListeners","_a","ackTimeout","timer","withErr","Promise","resolve","reject","arg1","arg2","tryCount","pending","responseArgs","hasError","_drainQueue","currentId","_packet","_sendConnectPacket","_pid","pid","offset","_lastOffset","sameNamespace","onconnect","onevent","onack","ondisconnect","destroy","message","emitEvent","_anyListeners","listeners","listener","self","sent","emitBuffered","subDestroy","_anyOutgoingListeners","Backoff","ms","min","max","factor","jitter","attempts","duration","Math","pow","rand","random","deviation","floor","reset","setMin","setMax","setJitter","nsps","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","Encoder","decoder","Decoder","autoConnect","v","_reconnection","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","_reconnecting","reconnect","skipReconnect","openSubDestroy","errorSub","maybeReconnectOnOpen","clearTimeout","onping","ondata","ondecoded","add","keys","active","_close","encodedPackets","encode","delay","onreconnect","attempt","cache","lookup","parsed","newConnection","forceNew","multiplex","Manager","Socket","console","token","beforeDestroy","methods","timestamp","scrollBottom","component","isReactNative","navigator","product","toLowerCase","WS","check","protocols","headers","ws","addEventListeners","_socket","closeEvent","onmessage","lastPacket","len","Buffer","byteLength","globalThisShim","window","Function","alphabet","map","prev","seed","encoded","now","PACKET_TYPES","PACKET_TYPES_REVERSE","ERROR_PACKET","encodePacket","encodeBlobAsBase64","fileReader","FileReader","onload","content","result","readAsDataURL","chars","Uint8Array","charCodeAt","decode","encoded1","encoded2","encoded3","encoded4","bufferLength","arraybuffer","bytes","decodePacket","encodedPacket","mapBinary","decodeBase64Packet","packetType","decoded","SEPARATOR","String","fromCharCode","encodePayload","count","decodePayload","encodedPayload","decodedPacket","TransportError","Transport","doOpen","doClose","details","nextTick","isPromiseAvailable","cb","then","WebSocket","MozWebSocket","usingBrowserWebSocket","defaultBinaryType","encodeURIComponent","qs","qry","pairs","pair","decodeURIComponent","pick","attr","reduce","acc","k","NATIVE_SET_TIMEOUT","setTimeout","NATIVE_CLEAR_TIMEOUT","installTimerFunctions","useNativeTimers","BASE64_OVERHEAD","utf8Length","ceil","size","Emitter","mixin","event","_callbacks","callbacks","hasListeners","login","sendSms","mobile","getUserInfo","getUserChannels","addFollow","target","deleteFollow","getUserProfile","updateUserProfile","updateUserPhoto"],"mappings":"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","file":"js/chunk-4221d902.0526f1db.js","sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"user-chat-page\"},[_c('van-nav-bar',{attrs:{\"fixed\":\"\",\"left-arrow\":\"\",\"title\":\"小知同学\"},on:{\"click-left\":function($event){return _vm.$router.back()}}}),_c('div',{ref:\"list\",staticClass:\"chat-list\"},_vm._l((_vm.list),function(item,i){return _c('div',{key:i,staticClass:\"chat-item\",class:{left:item.name==='xz',right:item.name==='my'}},[(item.name==='xz')?_c('van-icon',{attrs:{\"name\":\"xiaozhi\"}}):_vm._e(),_c('div',{staticClass:\"chat-pao\"},[_vm._v(_vm._s(item.msg))]),(item.name==='my')?_c('van-image',{attrs:{\"fit\":\"cover\",\"round\":\"\",\"src\":_vm.myAvatar}}):_vm._e()],1)}),0),_c('div',{staticClass:\"reply-container van-hairline--top\"},[_c('van-field',{attrs:{\"left-icon\":\"edit\",\"placeholder\":\"请描述您的问题\"},model:{value:(_vm.value),callback:function ($$v) {_vm.value=(typeof $$v === 'string'? $$v.trim(): $$v)},expression:\"value\"}}),_c('span',{staticClass:\"send\",on:{\"click\":function($event){return _vm.send()}}},[_vm._v(\"发送\")])],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","// browser shim for xmlhttprequest module\nimport { hasCORS } from \"../contrib/has-cors.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nexport function XHR(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nimport { XHR as XMLHttpRequest } from \"./xmlhttprequest.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false,\n    });\n    return null != xhr.responseType;\n})();\nexport class Polling extends Transport {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @package\n     */\n    constructor(opts) {\n        super(opts);\n        this.polling = false;\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n            this.xs = opts.secure !== isSSL;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @protected\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} onPause - callback upon buffers are flushed and transport is paused\n     * @package\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @private\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @protected\n     */\n    onData(data) {\n        const callback = (packet) => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @protected\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} packets - data packets\n     * @protected\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, (data) => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        let port = \"\";\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"https\" === schema && Number(this.opts.port) !== 443) ||\n                (\"http\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data,\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @package\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.async = false !== opts.async;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @private\n     */\n    create() {\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        opts.xscheme = !!this.opts.xs;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, this.async);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @private\n     */\n    onError(err) {\n        this.emitReserved(\"error\", err, this.xhr);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this.cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @package\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import { Polling } from \"./polling.js\";\nimport { WS } from \"./websocket.js\";\nexport const transports = {\n    websocket: WS,\n    polling: Polling,\n};\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses a URI\n *\n * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.\n *\n * See:\n * - https://developer.mozilla.org/en-US/docs/Web/API/URL\n * - https://caniuse.com/url\n * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B\n *\n * History of the parse() method:\n * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c\n * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3\n * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@\\/?#]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@\\/?#]*)(?::([^:@\\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri - uri or options\n     * @param {Object} opts - options\n     */\n    constructor(uri, opts = {}) {\n        super();\n        this.writeBuffer = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parse(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\"polling\", \"websocket\"];\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            addTrailingSlash: true,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024,\n            },\n            transportOptions: {},\n            closeOnBeforeunload: true,\n        }, opts);\n        this.opts.path =\n            this.opts.path.replace(/\\/$/, \"\") +\n                (this.opts.addTrailingSlash ? \"/\" : \"\");\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this.beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\", {\n                        description: \"network connection lost\",\n                    });\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} name - transport name\n     * @return {Transport}\n     * @private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts.transportOptions[name], this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port,\n        });\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", (reason) => this.onClose(\"transport close\", reason));\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} name - transport name\n     * @private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", (msg) => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = (err) => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        transport.open();\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState && this.opts.upgrade) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.resetPingTimeout();\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @return {Socket} for chaining.\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} type: packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options,\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @private\n     */\n    onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} upgrades - server upgrades\n     * @private\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\n","import { Socket } from \"./socket.js\";\nexport { Socket };\nexport const protocol = Socket.protocol;\nexport { Transport } from \"./transport.js\";\nexport { transports } from \"./transports/index.js\";\nexport { installTimerFunctions } from \"./util.js\";\nexport { parse } from \"./contrib/parseuri.js\";\nexport { nextTick } from \"./transports/websocket-constructor.js\";\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    delete packet.attachments; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                return this.encodeAsBinary({\n                    type: obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK,\n                    nsp: obj.nsp,\n                    data: obj.data,\n                    id: obj.id,\n                });\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            const isBinaryEvent = packet.type === PacketType.BINARY_EVENT;\n            if (isBinaryEvent || packet.type === PacketType.BINARY_ACK) {\n                packet.type = isBinaryEvent ? PacketType.EVENT : PacketType.ACK;\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return typeof payload === \"object\";\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || typeof payload === \"object\";\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return Array.isArray(payload) && payload.length > 0;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n            this.reconstructor = null;\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\n/**\n * A Socket is the fundamental class for interacting with the server.\n *\n * A Socket belongs to a certain Namespace (by default /) and uses an underlying {@link Manager} to communicate.\n *\n * @example\n * const socket = io();\n *\n * socket.on(\"connect\", () => {\n *   console.log(\"connected\");\n * });\n *\n * // send an event to the server\n * socket.emit(\"foo\", \"bar\");\n *\n * socket.on(\"foobar\", () => {\n *   // an event was received from the server\n * });\n *\n * // upon disconnection\n * socket.on(\"disconnect\", (reason) => {\n *   console.log(`disconnected due to ${reason}`);\n * });\n */\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     */\n    constructor(io, nsp, opts) {\n        super();\n        /**\n         * Whether the socket is currently connected to the server.\n         *\n         * @example\n         * const socket = io();\n         *\n         * socket.on(\"connect\", () => {\n         *   console.log(socket.connected); // true\n         * });\n         *\n         * socket.on(\"disconnect\", () => {\n         *   console.log(socket.connected); // false\n         * });\n         */\n        this.connected = false;\n        /**\n         * Whether the connection state was recovered after a temporary disconnection. In that case, any missed packets will\n         * be transmitted by the server.\n         */\n        this.recovered = false;\n        /**\n         * Buffer for packets received before the CONNECT packet\n         */\n        this.receiveBuffer = [];\n        /**\n         * Buffer for packets that will be sent once the socket is connected\n         */\n        this.sendBuffer = [];\n        /**\n         * The queue of packets to be sent with retry in case of failure.\n         *\n         * Packets are sent one by one, each waiting for the server acknowledgement, in order to guarantee the delivery order.\n         * @private\n         */\n        this._queue = [];\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        this._opts = Object.assign({}, opts);\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"connect\", () => {\n     *   console.log(socket.disconnected); // false\n     * });\n     *\n     * socket.on(\"disconnect\", () => {\n     *   console.log(socket.disconnected); // true\n     * });\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects.\n     *\n     * @example\n     * const socket = io();\n     *\n     * console.log(socket.active); // true\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   if (reason === \"io server disconnect\") {\n     *     // the disconnection was initiated by the server, you need to manually reconnect\n     *     console.log(socket.active); // false\n     *   }\n     *   // else the socket will automatically try to reconnect\n     *   console.log(socket.active); // true\n     * });\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @example\n     * const socket = io({\n     *   autoConnect: false\n     * });\n     *\n     * socket.connect();\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for {@link connect()}.\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * socket.send(\"hello\");\n     *\n     * // this is equivalent to\n     * socket.emit(\"message\", \"hello\");\n     *\n     * @return self\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @example\n     * socket.emit(\"hello\", \"world\");\n     *\n     * // all serializable datastructures are supported (no need to call JSON.stringify)\n     * socket.emit(\"hello\", 1, \"2\", { 3: [\"4\"], 5: Uint8Array.from([6]) });\n     *\n     * // with an acknowledgement from the server\n     * socket.emit(\"hello\", \"world\", (val) => {\n     *   // ...\n     * });\n     *\n     * @return self\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        if (this._opts.retries && !this.flags.fromQueue && !this.flags.volatile) {\n            this._addToQueue(args);\n            return this;\n        }\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n        }\n        else if (this.connected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        var _a;\n        const timeout = (_a = this.flags.timeout) !== null && _a !== void 0 ? _a : this._opts.ackTimeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        this.acks[id] = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, [null, ...args]);\n        };\n    }\n    /**\n     * Emits an event and waits for an acknowledgement\n     *\n     * @example\n     * // without timeout\n     * const response = await socket.emitWithAck(\"hello\", \"world\");\n     *\n     * // with a specific timeout\n     * try {\n     *   const response = await socket.timeout(1000).emitWithAck(\"hello\", \"world\");\n     * } catch (err) {\n     *   // the server did not acknowledge the event in the given delay\n     * }\n     *\n     * @return a Promise that will be fulfilled when the server acknowledges the event\n     */\n    emitWithAck(ev, ...args) {\n        // the timeout flag is optional\n        const withErr = this.flags.timeout !== undefined || this._opts.ackTimeout !== undefined;\n        return new Promise((resolve, reject) => {\n            args.push((arg1, arg2) => {\n                if (withErr) {\n                    return arg1 ? reject(arg1) : resolve(arg2);\n                }\n                else {\n                    return resolve(arg1);\n                }\n            });\n            this.emit(ev, ...args);\n        });\n    }\n    /**\n     * Add the packet to the queue.\n     * @param args\n     * @private\n     */\n    _addToQueue(args) {\n        let ack;\n        if (typeof args[args.length - 1] === \"function\") {\n            ack = args.pop();\n        }\n        const packet = {\n            id: this.ids++,\n            tryCount: 0,\n            pending: false,\n            args,\n            flags: Object.assign({ fromQueue: true }, this.flags),\n        };\n        args.push((err, ...responseArgs) => {\n            if (packet !== this._queue[0]) {\n                // the packet has already been acknowledged\n                return;\n            }\n            const hasError = err !== null;\n            if (hasError) {\n                if (packet.tryCount > this._opts.retries) {\n                    this._queue.shift();\n                    if (ack) {\n                        ack(err);\n                    }\n                }\n            }\n            else {\n                this._queue.shift();\n                if (ack) {\n                    ack(null, ...responseArgs);\n                }\n            }\n            packet.pending = false;\n            return this._drainQueue();\n        });\n        this._queue.push(packet);\n        this._drainQueue();\n    }\n    /**\n     * Send the first packet of the queue, and wait for an acknowledgement from the server.\n     * @private\n     */\n    _drainQueue() {\n        if (this._queue.length === 0) {\n            return;\n        }\n        const packet = this._queue[0];\n        if (packet.pending) {\n            return;\n        }\n        packet.pending = true;\n        packet.tryCount++;\n        const currentId = this.ids;\n        this.ids = packet.id; // the same id is reused for consecutive retries, in order to allow deduplication on the server side\n        this.flags = packet.flags;\n        this.emit.apply(this, packet.args);\n        this.ids = currentId; // restore offset\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this._sendConnectPacket(data);\n            });\n        }\n        else {\n            this._sendConnectPacket(this.auth);\n        }\n    }\n    /**\n     * Sends a CONNECT packet to initiate the Socket.IO session.\n     *\n     * @param data\n     * @private\n     */\n    _sendConnectPacket(data) {\n        this.packet({\n            type: PacketType.CONNECT,\n            data: this._pid\n                ? Object.assign({ pid: this._pid, offset: this._lastOffset }, data)\n                : data,\n        });\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    this.onconnect(packet.data.sid, packet.data.pid);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n        if (this._pid && args.length && typeof args[args.length - 1] === \"string\") {\n            this._lastOffset = args[args.length - 1];\n        }\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (\"function\" === typeof ack) {\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id, pid) {\n        this.id = id;\n        this.recovered = pid && this._pid === pid;\n        this._pid = pid; // defined only if connection state recovery is enabled\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually. In that case, the socket will not try to reconnect.\n     *\n     * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   // console.log(reason); prints \"io client disconnect\"\n     * });\n     *\n     * socket.disconnect();\n     *\n     * @return self\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for {@link disconnect()}.\n     *\n     * @return self\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * socket.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @example\n     * socket.volatile.emit(\"hello\"); // the server may or may not receive it\n     *\n     * @returns self\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * @example\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     *\n     * @returns self\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @example\n     * socket.onAny((event, ...args) => {\n     *   console.log(`got ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @example\n     * socket.prependAny((event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * }\n     *\n     * socket.onAny(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAny(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAny();\n     *\n     * @param listener\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * }\n     *\n     * socket.onAnyOutgoing(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAnyOutgoing(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAnyOutgoing();\n     *\n     * @param [listener] - the catch-all listener (optional)\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, nextTick, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        // emit `error`\n        const errorSub = on(socket, \"error\", (err) => {\n            self.cleanup();\n            self._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                self.maybeReconnectOnOpen();\n            }\n        });\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            if (timeout === 0) {\n                openSubDestroy(); // prevents a race condition with the 'open' event\n            }\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                socket.close();\n                // @ts-ignore\n                socket.emit(\"error\", new Error(\"timeout\"));\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\", e);\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\n        nextTick(() => {\n            this.emitReserved(\"packet\", packet);\n        }, this.setTimeoutFn);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        if (this._autoConnect) {\n            socket.connect();\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n","<template>\r\n  <div class=\"user-chat-page\">\r\n    <van-nav-bar\r\n      fixed\r\n      left-arrow\r\n      @click-left=\"$router.back()\"\r\n      title=\"小知同学\"\r\n    ></van-nav-bar>\r\n    <!-- 聊天列表 -->\r\n    <div class=\"chat-list\" ref=\"list\">\r\n      <div\r\n       class=\"chat-item\"\r\n       v-for=\"(item,i) in list\"\r\n       :key=\"i\"\r\n       :class=\"{left:item.name==='xz',right:item.name==='my'}\">\r\n        <van-icon  v-if=\"item.name==='xz'\" name=\"xiaozhi\"  />\r\n        <div class=\"chat-pao\">{{item.msg}}</div>\r\n        <van-image fit=\"cover\" round :src=\"myAvatar\" v-if=\"item.name==='my'\"/>\r\n      </div>\r\n    </div>\r\n    <!-- 输入框 -->\r\n    <div class=\"reply-container van-hairline--top\">\r\n      <van-field\r\n        v-model.trim=\"value\"\r\n        left-icon=\"edit\"\r\n        placeholder=\"请描述您的问题\"\r\n      ></van-field>\r\n      <span class=\"send\" @click=\"send()\">发送</span>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getUserProfile } from '@/api/user'\r\nimport soekctIO from 'socket.io-client'\r\nexport default {\r\n  name: 'UserChatPage',\r\n  data () {\r\n    return {\r\n      myAvatar: '',\r\n      list: [\r\n        { name: 'xz', msg: '我是小知同学，需要什么帮助吗？' },\r\n        { name: 'my', msg: '你好' }\r\n      ],\r\n      value: '',\r\n      io: null\r\n    }\r\n  },\r\n  async created () {\r\n    const res = await getUserProfile()\r\n    console.log(res)\r\n    this.myAvatar = res.data.data.photo\r\n    this.io = soekctIO('http://toutiao.itheima.net', {\r\n      query: {\r\n        token: this.$store.state.user.token\r\n      },\r\n      transports: ['websocket']\r\n    }\r\n    )\r\n    this.io.on('connect', () => {\r\n      this.list.push({ name: 'xz', msg: '我是小知同学，需要什么帮助吗？' })\r\n    })\r\n    this.io.on('message', data => {\r\n      this.list.push({ name: 'xz', msg: data.msg })\r\n    })\r\n  },\r\n  beforeDestroy () {\r\n    // 4. 关闭连接\r\n    this.io.close()\r\n  },\r\n  methods: {\r\n    send () {\r\n      if (!this.value) return this.$toast('请输入内容')\r\n      // 发送消息\r\n      this.io.emit('message', { msg: this.value, timestamp: Date.now() })\r\n      this.list.push({ name: 'my', msg: this.value })\r\n      this.value = ''\r\n      this.scrollBottom()\r\n    },\r\n    scrollBottom () {\r\n      this.$nextTick(() => {\r\n        // 思路：滚动的距离 = 可滚动的高度 - 自身高度\r\n        const scrollHeight = this.$refs.list.scrollHeight\r\n        const offsetHeight = this.$refs.list.offsetHeight\r\n        this.$refs.list.scrollTop = scrollHeight - offsetHeight\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style lang=\"less\" scoped>\r\n.user-chat-page {\r\n  height: 100%;\r\n  width: 100%;\r\n  position: absolute;\r\n  left: 0;\r\n  top: 0;\r\n  box-sizing: border-box;\r\n  background:#fff;\r\n  padding: 46px 0 50px 0;\r\n  .chat-list {\r\n    margin-top: 80px;\r\n    height: 100%;\r\n    overflow-y: scroll;\r\n    .chat-item{\r\n      font-size: 80px;\r\n      padding: 10px;\r\n      .van-image{\r\n        vertical-align: top;\r\n        width: 80px;\r\n        height: 80px;\r\n      }\r\n      .geek-icon {\r\n        font-size: 80px;\r\n        line-height: 0;\r\n      }\r\n      .chat-pao{\r\n        font-size: 30px!important;\r\n        vertical-align: center;\r\n        align-items: center;\r\n        display: inline-block;\r\n        min-width: 40px;\r\n        max-width: 70%;\r\n        min-height: 40px;\r\n        line-height: 40px;\r\n        border-radius: 4px;\r\n        position: relative;\r\n        padding: 10px;\r\n        background-color: #e9ddbe;\r\n        word-break: break-all;\r\n        font-size: 14px;\r\n        color: #333;\r\n        &::before{\r\n          content: \"\";\r\n          width: 6px;\r\n          height: 6px;\r\n          position: absolute;\r\n          top: 15px;\r\n          background: #e9ddbe;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n.chat-item.right{\r\n  text-align: right;\r\n  .chat-pao{\r\n    margin-left: 0;\r\n    margin-right: 10px;\r\n    &::before{\r\n      right: -3px;\r\n      transform: rotate(45deg);\r\n    }\r\n  }\r\n}\r\n.chat-item.left{\r\n  text-align: left;\r\n  .chat-pao{\r\n    margin-left: 10px;\r\n    margin-right: 0;\r\n    &::before{\r\n      left: -3px;\r\n      transform: rotate(-135deg);\r\n    }\r\n  }\r\n}\r\n.reply-container {\r\n  font-size: 40px!important;\r\n  position: fixed;\r\n  left: 0;\r\n  bottom: 0;\r\n  height: 89px;\r\n  width: 100%;\r\n  background: #fff;\r\n  z-index: 9999;\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 0 10px;\r\n  > .van-field {\r\n    flex: 1;\r\n    background: #F7F8FA;\r\n    height: 32px;\r\n    border-radius: 16px;\r\n    padding: 0 10px;\r\n    line-height: 32px;\r\n    ::v-deep .van-field__left-icon .van-icon {\r\n      color: #ccc;\r\n    }\r\n  }\r\n  > .send {\r\n    margin-right: 60px;\r\n    font-size: 24px;\r\n    color: #999;\r\n  }\r\n}\r\n</style>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=2e34b70c&scoped=true&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&id=2e34b70c&prod&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"2e34b70c\",\n  null\n  \n)\n\nexport default component.exports","import { Transport } from \"../transport.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { pick } from \"../util.js\";\nimport { defaultBinaryType, nextTick, usingBrowserWebSocket, WebSocket, } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @param {Object} opts - connection options\n     * @protected\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    get name() {\n        return \"websocket\";\n    }\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = (closeEvent) => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent,\n        });\n        this.ws.onmessage = (ev) => this.onData(ev.data);\n        this.ws.onerror = (e) => this.onError(\"websocket error\", e);\n    }\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, (data) => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        let port = \"\";\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"wss\" === schema && Number(this.opts.port) !== 443) ||\n                (\"ws\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @private\n     */\n    check() {\n        return !!WebSocket;\n    }\n}\n","export const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","// imported from https://github.com/unshiftio/yeast\n'use strict';\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nexport function encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nexport function decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nexport function yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + (content || \"\"));\n    };\n    return fileReader.readAsDataURL(data);\n};\nexport default encodePacket;\n","// imported from https://github.com/socketio/base64-arraybuffer\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            return data instanceof ArrayBuffer ? new Blob([data]) : data;\n        case \"arraybuffer\":\n        default:\n            return data; // assuming the data is already an ArrayBuffer\n    }\n};\nexport default decodePacket;\n","import encodePacket from \"./encodePacket.js\";\nimport decodePacket from \"./decodePacket.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload };\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nclass TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} opts - options\n     * @protected\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     */\n    open() {\n        this.readyState = \"opening\";\n        this.doOpen();\n        return this;\n    }\n    /**\n     * Closes the transport.\n     */\n    close() {\n        if (this.readyState === \"opening\" || this.readyState === \"open\") {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     */\n    send(packets) {\n        if (this.readyState === \"open\") {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n    /**\n     * Pauses the transport, in order not to lose packets during an upgrade.\n     *\n     * @param onPause\n     */\n    pause(onPause) { }\n}\n","import { globalThisShim as globalThis } from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return (cb) => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--11-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../../node_modules/less-loader/dist/cjs.js??ref--11-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&id=2e34b70c&prod&lang=less&scoped=true&\"","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","import { globalThisShim as globalThis } from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = globalThis.setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = globalThis.clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = globalThis.setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = globalThis.clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","/**\r\n * 用户相关的请求模块\r\n */\r\nimport request from '@/api/request' // 导入request.js中的request\r\n\r\nexport const login = data => {\r\n  return request({\r\n    method: 'POST',\r\n    url: '/v1_0/authorizations',\r\n    data\r\n  })\r\n}\r\n\r\n/**\r\n * 发送验证码\r\n * 注意：每手机号每分钟1次\r\n */\r\nexport const sendSms = mobile => {\r\n  return request({\r\n    method: 'GET',\r\n    url: `/v1_0/sms/codes/${mobile}`\r\n  })\r\n}\r\n\r\n/**\r\n * 获取用户自己的信息\r\n */\r\nexport const getUserInfo = () => {\r\n  return request({\r\n    method: 'GET',\r\n    url: '/v1_0/user'\r\n    // 发送请求头数据\r\n    // headers: {\r\n    //   // 注意：该接口需要授权才能访问\r\n    //   //       token的数据格式：Bearer token数据，注意 Bearer 后面有个空格\r\n    //   Authorization: `Bearer ${store.state.user.token}`\r\n    // }\r\n  })\r\n}\r\n\r\n/**\r\n * 获取用户频道列表\r\n */\r\nexport const getUserChannels = () => {\r\n  return request({\r\n    method: 'GET',\r\n    url: '/v1_0/user/channels'\r\n  })\r\n}\r\n\r\n/**\r\n * 关注用户\r\n */\r\nexport const addFollow = target => {\r\n  return request({\r\n    method: 'POST',\r\n    url: '/v1_0/user/followings',\r\n    data: {\r\n      target\r\n    }\r\n  })\r\n}\r\n\r\n/**\r\n * 取消关注用户\r\n */\r\nexport const deleteFollow = target => {\r\n  return request({\r\n    method: 'DELETE',\r\n    url: `/v1_0/user/followings/${target}`\r\n  })\r\n}\r\n\r\n/**\r\n * 获取当前登录用户的个人资料\r\n */\r\nexport const getUserProfile = target => {\r\n  return request({\r\n    method: 'GET',\r\n    url: '/v1_0/user/profile'\r\n  })\r\n}\r\n\r\n/**\r\n * 更新用户资料\r\n */\r\nexport const updateUserProfile = data => {\r\n  return request({\r\n    method: 'PATCH',\r\n    url: '/v1_0/user/profile',\r\n    data\r\n  })\r\n}\r\n\r\n/**\r\n * 更新用户照片资料\r\n */\r\nexport const updateUserPhoto = data => {\r\n  return request({\r\n    method: 'PATCH',\r\n    url: '/v1_0/user/photo',\r\n    data\r\n  })\r\n}\r\n"],"sourceRoot":""}